<!doctype html>
<html>

<head>
  <meta charset="UTF-8">
  <base href="/" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Traya7 Ludo</title>
  <link href="./assets/global.css" rel="stylesheet">
  <link href="./assets/main.css" rel="stylesheet">

  <script src="https://unpkg.com/htmx.org@1.9.10"></script>
  <script src="https://unpkg.com/htmx.org/dist/ext/ws.js"></script>

</head>

<body style="background-image: url(/assets/ludo/resources/20f05622-c57f-4f5b-a1b7-01a99c56627d.d87af.jpg);"
  class="bg-cover bg-no-repeat">
  <div class="h-screen w-screen flex justify-center items-center">
    <div class="text-white">
      <div class="text-center">
        <h2 class="text-xl">Ludo Classic Room</h2>
        <p class="text-xs"> room_id </p>
      </div>
      <div>
        <button id="spin">spin</button>
        <div>
          <canvas id="canvas"></canvas>
        </div>
      </div>
    </div>
  </div>

  <script>
    var options = ["60", "70", "80", "90", "100"];

    var startAngle = 0;
    var arc = Math.PI / (options.length / 2);
    var spinTimeout = null;

    var spinArcStart = 10;
    var spinTime = 0;
    var spinTimeTotal = 0;

    var ctx;

    document.getElementById("spin").addEventListener("click", spin);

    function byte2Hex(n) {
      var nybHexString = "0123456789ABCDEF";
      return String(nybHexString.substr((n >> 4) & 0x0F, 1)) + nybHexString.substr(n & 0x0F, 1);
    }

    function RGB2Color(r, g, b) {
      return '#' + byte2Hex(r) + byte2Hex(g) + byte2Hex(b);
    }

    function getColor(item, maxitem) {
      var phase = 0;
      var center = 128;
      var width = 127;
      var frequency = Math.PI * 2 / maxitem;

      red = Math.sin(frequency * item + 2 + phase) * width + center;
      green = Math.sin(frequency * item + 0 + phase) * width + center;
      blue = Math.sin(frequency * item + 4 + phase) * width + center;

      return RGB2Color(red, green, blue);
    }

    function drawRouletteWheel() {
      var canvas = document.getElementById("canvas");
      let w = window.screen.width;
      canvas.width = canvas.height = w;

      if (canvas.getContext) {
        var outsideRadius = 100;
        var insideRadius = 0;
        var textRadius = 60;

        ctx = canvas.getContext("2d");
        ctx.clearRect(0, 0, w, w);

        ctx.strokeStyle = "black";
        ctx.lineWidth = 2;

        ctx.font = 'bold 12px Helvetica, Arial';

        for (var i = 0; i < options.length; i++) {
          var angle = startAngle + i * arc;
          //ctx.fillStyle = colors[i];
          ctx.fillStyle = getColor(i, options.length);

          ctx.beginPath();
          ctx.arc(200, 200, outsideRadius, angle, angle + arc, false);
          ctx.arc(200, 200, insideRadius, angle + arc, angle, true);
          ctx.stroke();
          ctx.fill();

          ctx.save();
          ctx.shadowOffsetX = -1;
          ctx.shadowOffsetY = -1;
          ctx.shadowBlur = 0;
          ctx.shadowColor = "rgb(220,220,220)";
          ctx.fillStyle = "black";
          ctx.translate(200 + Math.cos(angle + arc / 2) * textRadius,
            200 + Math.sin(angle + arc / 2) * textRadius);
          ctx.rotate(angle + arc / 2 + Math.PI / 2);
          var text = options[i];
          ctx.fillText(text, -ctx.measureText(text).width / 2, 0);
          ctx.restore();
        }

        //Arrow
        ctx.fillStyle = "black";
        ctx.beginPath();
        ctx.moveTo(200 - 4, 200 - (outsideRadius + 5));
        ctx.lineTo(200 + 4, 200 - (outsideRadius + 5));
        ctx.lineTo(200 + 4, 200 - (outsideRadius - 5));
        ctx.lineTo(200 + 9, 200 - (outsideRadius - 5));
        ctx.lineTo(200 + 0, 200 - (outsideRadius - 13));
        ctx.lineTo(200 - 9, 200 - (outsideRadius - 5));
        ctx.lineTo(200 - 4, 200 - (outsideRadius - 5));
        ctx.lineTo(200 - 4, 200 - (outsideRadius + 5));
        ctx.fill();
      }
    }

    function spin() {
      spinAngleStart = Math.random() * 10 + 10;
      spinTime = 0;
      spinTimeTotal = Math.random() * 3 + 4 * 1000;
      rotateWheel();
    }

    function rotateWheel() {
      spinTime += 30;
      if (spinTime >= spinTimeTotal) {
        stopRotateWheel();
        return;
      }
      var spinAngle = spinAngleStart - easeOut(spinTime, 0, spinAngleStart, spinTimeTotal);
      startAngle += (spinAngle * Math.PI / 180);
      drawRouletteWheel();
      spinTimeout = setTimeout('rotateWheel()', 30);
    }

    function stopRotateWheel() {
      clearTimeout(spinTimeout);
      var degrees = startAngle * 180 / Math.PI + 90;
      var arcd = arc * 180 / Math.PI;
      var index = Math.floor((360 - degrees % 360) / arcd);
      ctx.save();
      ctx.font = 'bold 30px Helvetica, Arial';
      var text = options[index]
      ctx.fillText(text, 250 - ctx.measureText(text).width / 2, 250 + 10);
      ctx.restore();
    }

    function easeOut(t, b, c, d) {
      var ts = (t /= d) * t;
      var tc = ts * t;
      return b + c * (tc + -3 * ts + 3 * t);
    }

    drawRouletteWheel();
  </script>
</body>

</html>
